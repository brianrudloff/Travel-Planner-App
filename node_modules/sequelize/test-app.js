"use strict";
/* jshint esnext:true, -W110 */

var Sequelize, sequelize, DataTypes, Promise = require('bluebird'), _ = require('lodash'), moment = require('moment');

Sequelize = DataTypes = require('./index.js');
// var db = sequelize = new Sequelize('sequelize', 'root', '', {
var db = sequelize = new Sequelize('sequelize_test', 'postgres', 'postgres', {
  dialect: 'postgres',
//var db = sequelize = new Sequelize('sequelize-test-72', 'sequelize', 'nEGkLma26gXVHFUAHJxcmsrK', {
//   dialect: 'sqlite',
  //dialect: 'mssql',
  //host: 'mssql.sequelizejs.com',
  //port: 11433,
  // dialect: 'sqlite',
  //storage: '/tmp/test.sqlite',
//  timezone: '+05:30',
  define: {
    // timestamps: false,
  },
  logging: console.log
});

var User = sequelize.define('user', {
  date: DataTypes.DATE
});

// console.log(sequelize.dialect.connectionManager);
sequelize.dialect.connectionManager.validate = function (connection) {
  console.log('valid!')
  return true;
};
let d = new Date();

return sequelize.sync({
  force: true,
  logging: false
})
  .then(() => {
    return User.create({ date: d});
  })
  .then(() => {
    return Promise.join(
      User.findAll({
        where: {
          date: d
        }
      }),
      sequelize.query('SELECT * FROM users WHERE date = :startDate',
        { replacements: {startDate: d}, type: sequelize.QueryTypes.SELECT }
      )
    )
  })
  .then(console.log)
  .finally(() => sequelize.close());
